// <auto-generated />
using System;
using Boilerplate.Infrastructure.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Boilerplate.Infrastructure.Migrations
{
    [DbContext(typeof(BoilerplateDBContext))]
    [Migration("20241125180137_AddUniqueIdColumnToPatientEntity")]
    partial class AddUniqueIdColumnToPatientEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Boilerplate.Core.Entities.Auth.Roles.RoleTranslation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<string>("Locale")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("locale");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("role_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("RoleId", "Locale")
                        .IsUnique()
                        .HasFilter("[role_id] IS NOT NULL");

                    b.ToTable("role_translations");
                });

            modelBuilder.Entity("Boilerplate.Core.Entities.Auth.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("first_name");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("bit")
                        .HasColumnName("is_banned");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("last_name");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("phone_number");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("UserName", "Email")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL AND [Email] IS NOT NULL");

                    b.ToTable("Users", "security");

                    b.HasData(
                        new
                        {
                            Id = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e3b9c8c2-31c8-4899-99c4-6ebc51e2542b",
                            CreatedAt = new DateTime(2024, 11, 25, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            Email = "HealthTom@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Admin",
                            Gender = 1,
                            IsBanned = false,
                            LastName = "Admin",
                            LockoutEnabled = true,
                            NormalizedEmail = "AMALASSEM21@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAECi3lT6l+1HKEawLjldUyT9Azn1jpzQZeMkapDbycmjUT++jy2voAG5zGBg4Spj+iA==",
                            PhoneNumber = "01145907543",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "SLKWB2MKZHIHR3TK4VHZYLZSAMIKAUCF",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 11, 25, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            UserName = "Admin"
                        });
                });

            modelBuilder.Entity("Boilerplate.Core.Entities.Migrations.Migration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("error");

                    b.Property<int>("ErrorColumn")
                        .HasColumnType("int")
                        .HasColumnName("error_column");

                    b.Property<int>("ErrorRow")
                        .HasColumnType("int")
                        .HasColumnName("error_row");

                    b.Property<string>("ErrorSheet")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("error_sheet");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("file_name");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("file_url");

                    b.Property<string>("MigrationStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("migration_status");

                    b.Property<int>("NoSheets")
                        .HasColumnType("int")
                        .HasColumnName("no_sheets");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("migrations");
                });

            modelBuilder.Entity("Boilerplate.Core.Entities.Patient.Patient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("birth_date");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("unique_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("patient");
                });

            modelBuilder.Entity("Boilerplate.Core.Entities.PermissionModule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit")
                        .HasColumnName("is_system");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("permission_modules");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            IsSystem = true,
                            Name = "Departments",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            IsSystem = true,
                            Name = "Users",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            IsSystem = true,
                            Name = "Roles",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            IsSystem = true,
                            Name = "Permissions",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            IsSystem = true,
                            Name = "Settings",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            IsSystem = true,
                            Name = "Languages",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            IsSystem = true,
                            Name = "Department Users",
                            UpdatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            IsSystem = true,
                            Name = "Dashboard",
                            UpdatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        });
                });

            modelBuilder.Entity("Boilerplate.Core.Entities.RolePermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<long>("ModuleId")
                        .HasColumnType("bigint")
                        .HasColumnName("module_id");

                    b.Property<long>("OperationId")
                        .HasColumnType("bigint")
                        .HasColumnName("operation_id");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("role_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.HasIndex("RoleId");

                    b.ToTable("role_permission");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 1L,
                            OperationId = 1L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 1L,
                            OperationId = 2L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 1L,
                            OperationId = 3L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 1L,
                            OperationId = 4L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 1L,
                            OperationId = 5L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 2L,
                            OperationId = 1L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 2L,
                            OperationId = 2L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 2L,
                            OperationId = 3L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 2L,
                            OperationId = 4L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 2L,
                            OperationId = 5L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 3L,
                            OperationId = 1L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 3L,
                            OperationId = 2L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 3L,
                            OperationId = 3L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 3L,
                            OperationId = 4L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 3L,
                            OperationId = 5L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 16L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 4L,
                            OperationId = 1L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 17L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 4L,
                            OperationId = 2L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 18L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 4L,
                            OperationId = 3L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 19L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 4L,
                            OperationId = 4L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 20L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 4L,
                            OperationId = 5L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 21L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 5L,
                            OperationId = 1L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 22L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 5L,
                            OperationId = 2L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 23L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 5L,
                            OperationId = 3L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 24L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 5L,
                            OperationId = 4L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 25L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 5L,
                            OperationId = 5L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 26L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 6L,
                            OperationId = 1L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 27L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 6L,
                            OperationId = 2L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 28L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 6L,
                            OperationId = 3L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 29L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 6L,
                            OperationId = 4L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 30L,
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 6L,
                            OperationId = 5L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 31L,
                            CreatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 7L,
                            OperationId = 1L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 32L,
                            CreatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 7L,
                            OperationId = 2L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 33L,
                            CreatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 7L,
                            OperationId = 3L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 34L,
                            CreatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 7L,
                            OperationId = 4L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 35L,
                            CreatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 7L,
                            OperationId = 5L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 36L,
                            CreatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 9L,
                            OperationId = 1L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 37L,
                            CreatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 9L,
                            OperationId = 2L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 38L,
                            CreatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 9L,
                            OperationId = 3L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 39L,
                            CreatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 9L,
                            OperationId = 4L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = 40L,
                            CreatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            ModuleId = 9L,
                            OperationId = 5L,
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            UpdatedAt = new DateTime(2023, 2, 20, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        });
                });

            modelBuilder.Entity("Boilerplate.Core.Entities.Visit.Visit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<int>("ExamStatus")
                        .HasColumnType("int")
                        .HasColumnName("exam_status");

                    b.Property<int>("ExamType")
                        .HasColumnType("int")
                        .HasColumnName("exam_type");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<long>("PatientId")
                        .HasColumnType("bigint")
                        .HasColumnName("patient_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("visit");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", "security");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", "security");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", "security");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", "security");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", "security");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUserRole<string>");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", "security");
                });

            modelBuilder.Entity("Boilerplate.Core.Entities.Auth.Roles.Role", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit")
                        .HasColumnName("is_system");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasDiscriminator().HasValue("Role");

                    b.HasData(
                        new
                        {
                            Id = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            ConcurrencyStamp = "6acc130c-f695-4134-9e9c-19ba25872d52",
                            Name = "Super Admin",
                            NormalizedName = "SUPER ADMIN",
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            IsSystem = true,
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = "67df368b-c097-4020-b6b9-f2c03aaae7a8",
                            ConcurrencyStamp = "1d548e79-f43f-4452-af54-88327d81a3a4",
                            Name = "Admin",
                            NormalizedName = "ADMIN",
                            CreatedAt = new DateTime(2023, 9, 27, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            IsSystem = true,
                            UpdatedAt = new DateTime(2023, 9, 27, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = "fd44e5d3-57ed-4276-98b6-844f06045062",
                            ConcurrencyStamp = "d0926134-d4c9-4ce4-9802-3f1c6605a33b",
                            Name = "Content Creator",
                            NormalizedName = "CONTENT CREATOR",
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            IsSystem = true,
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            Id = "61580090-2de4-4f3a-8d93-34e32fc48ecb",
                            ConcurrencyStamp = "d65c8300-f921-4eb4-9241-98ddc63c50f5",
                            Name = "Editor",
                            NormalizedName = "EDITOR",
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            IsDeleted = false,
                            IsSystem = true,
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        });
                });

            modelBuilder.Entity("Boilerplate.Core.Entities.Auth.Roles.UserRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId1")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("UserId1");

                    b.HasIndex("UserId", "RoleId")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("UserRole");

                    b.HasData(
                        new
                        {
                            UserId = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            RoleId = "fd44e5d3-57ed-4276-98b6-844f06045062",
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            Id = 0L,
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            UserId = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            RoleId = "b17cc416-89b4-455d-a58a-4b4e8503e995",
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            Id = 0L,
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        },
                        new
                        {
                            UserId = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            RoleId = "61580090-2de4-4f3a-8d93-34e32fc48ecb",
                            CreatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            CreatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8",
                            Id = 0L,
                            UpdatedAt = new DateTime(2021, 11, 15, 0, 53, 30, 0, DateTimeKind.Unspecified),
                            UpdatedBy = "c1be5862-d402-4a31-b292-6aded859f7a8"
                        });
                });

            modelBuilder.Entity("Boilerplate.Core.Entities.Auth.Roles.RoleTranslation", b =>
                {
                    b.HasOne("Boilerplate.Core.Entities.Auth.Roles.Role", "Role")
                        .WithMany("RoleTranslations")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Boilerplate.Core.Entities.Auth.User", b =>
                {
                    b.OwnsMany("Boilerplate.Core.Entities.Auth.UserValidationToken", "ValidationTokens", b1 =>
                        {
                            b1.Property<long>("TokenId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasColumnName("token_id");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("TokenId"), 1L, 1);

                            b1.Property<string>("Agent")
                                .HasMaxLength(400)
                                .HasColumnType("nvarchar(400)")
                                .HasColumnName("agent");

                            b1.Property<string>("Code")
                                .IsRequired()
                                .HasMaxLength(6)
                                .HasColumnType("nvarchar(6)")
                                .HasColumnName("code");

                            b1.Property<DateTime>("CreatedOn")
                                .HasColumnType("datetime2")
                                .HasColumnName("created_on");

                            b1.Property<DateTime>("ExpiresOn")
                                .HasColumnType("datetime2")
                                .HasColumnName("expires_on");

                            b1.Property<string>("IpAdress")
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("ip_adress");

                            b1.Property<bool>("IsUsed")
                                .HasColumnType("bit")
                                .HasColumnName("is_used");

                            b1.Property<DateTime?>("RevokedOn")
                                .HasColumnType("datetime2")
                                .HasColumnName("revoked_on");

                            b1.Property<string>("Token")
                                .IsRequired()
                                .HasMaxLength(400)
                                .HasColumnType("nvarchar(400)")
                                .HasColumnName("token");

                            b1.Property<string>("UserId")
                                .IsRequired()
                                .HasColumnType("nvarchar(450)");

                            b1.HasKey("TokenId");

                            b1.HasIndex("UserId");

                            b1.ToTable("user_validation_tokens", "security");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("ValidationTokens");
                });

            modelBuilder.Entity("Boilerplate.Core.Entities.RolePermission", b =>
                {
                    b.HasOne("Boilerplate.Core.Entities.PermissionModule", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Boilerplate.Core.Entities.Auth.Roles.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Boilerplate.Core.Entities.Visit.Visit", b =>
                {
                    b.HasOne("Boilerplate.Core.Entities.Patient.Patient", "Patient")
                        .WithMany("Visits")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Boilerplate.Core.Entities.Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Boilerplate.Core.Entities.Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Boilerplate.Core.Entities.Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Boilerplate.Core.Entities.Auth.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Boilerplate.Core.Entities.Auth.Roles.UserRole", b =>
                {
                    b.HasOne("Boilerplate.Core.Entities.Auth.Roles.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UserRoles_Roles_RoleId1");

                    b.HasOne("Boilerplate.Core.Entities.Auth.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId1");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Boilerplate.Core.Entities.Auth.User", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Boilerplate.Core.Entities.Patient.Patient", b =>
                {
                    b.Navigation("Visits");
                });

            modelBuilder.Entity("Boilerplate.Core.Entities.Auth.Roles.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("RoleTranslations");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
