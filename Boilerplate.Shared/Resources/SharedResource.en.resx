<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="Email is already registered" xml:space="preserve">
    <value>Email is already registered</value>
  </data>
  <data name="Email is not correct" xml:space="preserve">
    <value>Email is not correct</value>
  </data>
  <data name="Email is required" xml:space="preserve">
    <value>Email is required</value>
  </data>
  <data name="Failed" xml:space="preserve">
    <value>Failed</value>
  </data>
  <data name="RFID" xml:space="preserve">
    <value>RFID</value>
  </data>
  <data name="RFID App, Did you change your Password" xml:space="preserve">
    <value>RFID App, Did you change your password?</value>
  </data>
  <data name="RFID App, Reset password Code" xml:space="preserve">
    <value>RFID App, Reset password code</value>
  </data>
  <data name="RFID Password Changed" xml:space="preserve">
    <value>We noticed the password for your RFID account was recently changed.</value>
  </data>
  <data name="Invalid Code" xml:space="preserve">
    <value>Invalid code</value>
  </data>
  <data name="Invalid email" xml:space="preserve">
    <value>Invalid email</value>
  </data>
  <data name="Invalid or Inactive Code" xml:space="preserve">
    <value>Invalid or inactive code</value>
  </data>
  <data name="Invalid Personal Key" xml:space="preserve">
    <value>Invalid Personal Key</value>
  </data>
  <data name="Invalid Role" xml:space="preserve">
    <value>Invalid Role</value>
  </data>
  <data name="Invalid token" xml:space="preserve">
    <value>Invalid token</value>
  </data>
  <data name="Invalid user ID or Role" xml:space="preserve">
    <value>Invalid user ID or role</value>
  </data>
  <data name="Old Password is incorrect" xml:space="preserve">
    <value>Old password is incorrect</value>
  </data>
  <data name="Personal Key is incorrect" xml:space="preserve">
    <value>Personal Key is incorrect</value>
  </data>
  <data name="Personal Key or Password is incorrect" xml:space="preserve">
    <value>Personal key or password is incorrect</value>
  </data>
  <data name="Phone is already registered" xml:space="preserve">
    <value>Phone is already registered</value>
  </data>
  <data name="Phone is not correct" xml:space="preserve">
    <value>Phone is not correct</value>
  </data>
  <data name="Phone is required" xml:space="preserve">
    <value>Phone is required</value>
  </data>
  <data name="Refresh Token is required" xml:space="preserve">
    <value>Refresh token is required</value>
  </data>
  <data name="Something went wrong when tring to add role to user" xml:space="preserve">
    <value>Something went wrong when tring to add role to user</value>
  </data>
  <data name="Sure" xml:space="preserve">
    <value>Are You Sure ?</value>
  </data>
  <data name="The record may be exist before" xml:space="preserve">
    <value>The record may be exist before </value>
  </data>
  <data name="The record may be related with other records" xml:space="preserve">
    <value>The record may be related with other records</value>
  </data>
  <data name="This role does not have users" xml:space="preserve">
    <value>This role does not have users</value>
  </data>
  <data name="User already assigned to this role" xml:space="preserve">
    <value>User already assigned to this role</value>
  </data>
  <data name="User is Inactive" xml:space="preserve">
    <value>User is inactive</value>
  </data>
  <data name="User was created successfully" xml:space="preserve">
    <value>User was created successfully but something went wrong when tring to add role to user</value>
  </data>
  <data name="Username is already registered" xml:space="preserve">
    <value>Username is already registered</value>
  </data>
  <data name="Your Reset Code is" xml:space="preserve">
    <value>Your reset code is</value>
  </data>
  <data name="You can't Edit This Survey" xml:space="preserve">
    <value>You can't Edit This Survey</value>
  </data>
  <data name="This Item is Already found" xml:space="preserve">
    <value>This item is already found.</value>
  </data>
  <data name="EndDate is Required" xml:space="preserve">
    <value>EndDate is Required</value>
  </data>
  <data name="Only admin account can login" xml:space="preserve">
    <value>Only admin account can login</value>
  </data>
  <data name="Only EndUser account can login" xml:space="preserve">
    <value>Only EndUser account can login</value>
  </data>
</root>